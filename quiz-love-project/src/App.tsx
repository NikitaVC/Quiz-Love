
import React, { useState } from "react";

const QuizApp = () => {
  const [step, setStep] = useState(0);
  const [score, setScore] = useState(0);
  const [showResult, setShowResult] = useState(false);

  const questions = [
    {
      question: "–ö–∞–∫ –æ–Ω —Ä–µ–∞–≥–∏—Ä—É–µ—Ç –Ω–∞ —Ç–≤–æ–∏ —Ñ–æ—Ç–æ –≤ —Å–æ—Ü—Å–µ—Ç—è—Ö?",
      answers: [
        { text: "–í—Å–µ–≥–¥–∞ –ª–∞–π–∫–∞–µ—Ç –∏ –∫–æ–º–º–µ–Ω—Ç–∏—Ä—É–µ—Ç ‚ù§Ô∏è", points: 2 },
        { text: "–ò–Ω–æ–≥–¥–∞ –∑–∞–º–µ—á–∞–µ—Ç", points: 1 },
        { text: "–ù–µ –æ–±—Ä–∞—â–∞–µ—Ç –≤–Ω–∏–º–∞–Ω–∏—è", points: 0 },
      ],
    },
    {
      question: "–°–∫–æ–ª—å–∫–æ –≤—Ä–µ–º–µ–Ω–∏ –ø—Ä–æ—Ö–æ–¥–∏—Ç, –ø—Ä–µ–∂–¥–µ —á–µ–º –æ–Ω –æ—Ç–≤–µ—á–∞–µ—Ç –Ω–∞ —Ç–≤–æ–∏ —Å–æ–æ–±—â–µ–Ω–∏—è?",
      answers: [
        { text: "–°—Ä–∞–∑—É! üïê", points: 2 },
        { text: "–ß–µ—Ä–µ–∑ –ø–∞—Ä—É —á–∞—Å–æ–≤", points: 1 },
        { text: "–ú–æ–∂–µ—Ç –¥–∞–∂–µ –Ω–µ –æ—Ç–≤–µ—Ç–∏—Ç—å", points: 0 },
      ],
    },
  ];

  const handleAnswer = (points) => {
    setScore(score + points);
    if (step + 1 < questions.length) {
      setStep(step + 1);
    } else {
      setShowResult(true);
    }
  };

  return (
    <div className="flex flex-col items-center justify-center min-h-screen bg-gradient-to-r from-red-600 to-yellow-400 p-6 text-white font-bold">
      {showResult ? (
        <div className="text-center bg-white p-8 rounded-xl shadow-xl text-gray-900">
          <h2 className="text-5xl font-bold text-red-600">üî• –¢–≤–æ–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç! üî•</h2>
          <p className="text-xl mt-4">–¢—ã –Ω–∞–±—Ä–∞–ª {score} –∏–∑ {questions.length * 2} –±–∞–ª–ª–æ–≤!</p>
          <button onClick={() => window.location.reload()} className="mt-6 px-6 py-3 bg-red-500 text-white rounded-xl font-semibold hover:bg-red-400 transition transform hover:scale-105">
            üîÑ –ü—Ä–æ–π—Ç–∏ —Å–Ω–æ–≤–∞
          </button>
        </div>
      ) : (
        <div className="text-center bg-white p-8 rounded-xl shadow-xl text-gray-900">
          <h2 className="text-4xl font-bold text-red-600 mb-4">{questions[step].question}</h2>
          {questions[step].answers.map((answer, index) => (
            <button
              key={index}
              onClick={() => handleAnswer(answer.points)}
              className="block mt-4 px-6 py-3 bg-yellow-500 text-white rounded-xl font-semibold hover:bg-yellow-400 transition transform hover:scale-105 w-64"
            >
              {answer.text}
            </button>
          ))}
        </div>
      )}
    </div>
  );
};

export default QuizApp;
